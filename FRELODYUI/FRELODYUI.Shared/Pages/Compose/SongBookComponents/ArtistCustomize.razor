@inject ILogger<ArtistCustomize> _logger

@if (Show)
{
    <div class="modal fade show" style="display: block;" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Artist</h5>
                    <button type="button" class="btn-close" @onclick="Cancel"></button>
                </div>
                <div class="modal-body">
                    <EditForm Model="@Content" OnValidSubmit="Save">
                        <DataAnnotationsValidator />
                        <div class="mb-3">
                            <label class="form-label">Artist Name <span class="text-danger">*</span></label>
                            <InputText @bind-Value="Content.Name" class="form-control" placeholder="Enter artist name" />
                            <ValidationMessage For="@(() => Content.Name)" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Country</label>
                            <InputText @bind-Value="Content.Country" class="form-control" placeholder="Enter country" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Biography</label>
                            <InputTextArea @bind-Value="Content.Bio" class="form-control" rows="3" placeholder="Enter artist biography" />
                        </div>
                        <div class="d-flex justify-content-end gap-2">
                            <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    [Parameter] public bool Show { get; set; }
    [Parameter] public ArtistDto Content { get; set; } = new();
    [Parameter] public EventCallback<ArtistDto> OnSave { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    protected override void OnParametersSet()
    {
        if (Show)
        {
            Content ??= new();
        }
    }

    private void Save()
    {
        OnSave.InvokeAsync(Content);
    }

    private void Cancel()
    {
        OnCancel.InvokeAsync();
    }
}
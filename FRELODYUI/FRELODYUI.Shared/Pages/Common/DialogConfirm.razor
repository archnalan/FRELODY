<div class="modal show fade d-block" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content text-center">
            <div class="modal-header border-0">
                <h5 class="modal-title">@ModalTitle</h5>
                <button type="button" class="btn-close" @onclick="CloseDialog"></button>
            </div>
            <div class="modal-body border-0">
                <p>@ModalSubtitle</p>
                <p>@ModalMessage</p>
                <p class="text-danger">@ModalDangerText</p>
            </div>
            <div class="modal-footer justify-content-center gap-4 border-0">
                <button type="button" class="btn btn-outline-primary" @onclick="CloseDialog">Cancel</button>
                <button type="button" class="btn btn-outline-danger" @onclick="ConfirmDialog">Delete</button>
            </div>
        </div>
    </div>
</div>
<div class="modal-backdrop fade show"></div>

@code {
    [Parameter]
    public string? ModalTitle { get; set; }
    [Parameter]    
    public string? ModalSubtitle { get; set; }
    [Parameter]    
    public string? ModalMessage { get; set; }
    [Parameter]    
    public string? ModalDangerText { get; set; }
    [Parameter]    
    public string? ModalButtonText { get; set; }
    [Parameter]
    public EventCallback<bool> OnConfirm { get; set; }
    [Parameter]
    public EventCallback OnCancel { get; set; }

    private void CloseDialog()
    {
        OnCancel.InvokeAsync();
    }

    private async Task ConfirmDialog()
    {
        if (OnConfirm.HasDelegate)
        {
            await OnConfirm.InvokeAsync(true);
        }
        CloseDialog();
    }

}
